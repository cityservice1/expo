{"version":3,"file":"getRoutesRedirects.js","sourceRoot":"","sources":["../src/getRoutesRedirects.tsx"],"names":[],"mappings":";;;AAAA,mCAAgD;AAChD,sCAAuC;AACvC,yCAA8C;AAO9C,SAAgB,cAAc,CAAC,QAAwB;IACrD,OAAO;QACL,OAAO,EAAE,SAAS,iBAAiB;YACjC,MAAM,MAAM,GAAG,IAAA,6BAAqB,GAAE,CAAC;YAEvC,MAAM,IAAI,GAAG,QAAQ,CAAC,WAAW;iBAC9B,KAAK,CAAC,GAAG,CAAC;iBACV,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBACZ,MAAM,KAAK,GAAG,IAAA,2BAAgB,EAAC,IAAI,CAAC,CAAC;gBACrC,OAAO,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACtC,CAAC,CAAC;iBACD,MAAM,CAAC,OAAO,CAAC;iBACf,IAAI,CAAC,GAAG,CAAC,CAAC;YAEb,OAAO,CAAC,eAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAG,CAAC;QAClC,CAAC;KACF,CAAC;AACJ,CAAC;AAjBD,wCAiBC","sourcesContent":["import { useGlobalSearchParams } from './hooks';\nimport { Redirect } from './link/Link';\nimport { matchDynamicName } from './matchers';\n\nexport type RedirectConfig = {\n  source: string;\n  destination: string;\n};\n\nexport function redirectModule(redirect: RedirectConfig) {\n  return {\n    default: function RedirectComponent() {\n      const params = useGlobalSearchParams();\n\n      const href = redirect.destination\n        .split('/')\n        .map((part) => {\n          const match = matchDynamicName(part);\n          return match ? params[match] : part;\n        })\n        .filter(Boolean)\n        .join('/');\n\n      return <Redirect href={href} />;\n    },\n  };\n}\n"]}